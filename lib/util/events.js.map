{"version":3,"sources":["util/events.js"],"names":["module","exports","once","el","type","callback","typeArray","split","recursiveFunction","e","target","removeEventListener","i","length","on","addEventListener","attachEvent","call","off","detachEvent","isKeyboard","indexOf"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB;AAEfC,MAFe,gBAEVC,EAFU,EAENC,IAFM,EAEAC,QAFA,EAEU;AACvB,QAAIC,YAAYF,KAAKG,KAAL,CAAW,GAAX,CAAhB;AACA,QAAIC,oBAAoB,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC7BA,QAAEC,MAAF,CAASC,mBAAT,CAA6BF,EAAEL,IAA/B,EAAqCI,iBAArC;AACA,aAAOH,SAASI,CAAT,CAAP;AACD,KAHD;;AAKA,SAAK,IAAIG,IAAIN,UAAUO,MAAV,GAAmB,CAAhC,EAAmCD,KAAK,CAAxC,EAA2CA,GAA3C,EAAgD;AAC9C,WAAKE,EAAL,CAAQX,EAAR,EAAYG,UAAUM,CAAV,CAAZ,EAA0BJ,iBAA1B;AACD;AACF,GAZc;AAcfM,IAde,cAcZX,EAdY,EAcRC,IAdQ,EAcFC,QAdE,EAcQ;AACrB,QAAIF,GAAGY,gBAAP,EAAyB;AACvBZ,SAAGY,gBAAH,CAAoBX,IAApB,EAA0BC,QAA1B;AACD,KAFD,MAGK;AACH;AACAF,SAAGa,WAAH,CAAe,OAAOZ,IAAtB,EAA4B,YAAM;AAChCC,iBAASY,IAAT,CAAcd,EAAd;AACD,OAFD;AAGD;AACF,GAxBc;AA0Bfe,KA1Be,eA0BXf,EA1BW,EA0BPC,IA1BO,EA0BDC,QA1BC,EA0BS;AACtB,QAAIF,GAAGQ,mBAAP,EAA4B;AAC1BR,SAAGQ,mBAAH,CAAuBP,IAAvB,EAA6BC,QAA7B;AACD,KAFD,MAGK;AACH;AACAF,SAAGgB,WAAH,CAAe,OAAOf,IAAtB,EAA4BC,QAA5B;AACD;AACF,GAlCc;AAoCfe,YApCe,sBAoCJX,CApCI,EAoCD;AACZ,WAAO,CACH,SADG,EAEH,UAFG,EAGH,OAHG,EAIHY,OAJG,CAIKZ,EAAEL,IAJP,MAIiB,CAAC,CAJzB;AAKD;AA1Cc,CAAjB","file":"events.js","sourcesContent":["module.exports = {\n\n  once(el, type, callback) {\n    let typeArray = type.split(' ');\n    let recursiveFunction = (e) => {\n      e.target.removeEventListener(e.type, recursiveFunction);\n      return callback(e);\n    };\n\n    for (let i = typeArray.length - 1; i >= 0; i--) {\n      this.on(el, typeArray[i], recursiveFunction);\n    }\n  },\n\n  on(el, type, callback) {\n    if (el.addEventListener) {\n      el.addEventListener(type, callback);\n    }\n    else {\n      // IE8+ Support\n      el.attachEvent('on' + type, () => {\n        callback.call(el);\n      });\n    }\n  },\n\n  off(el, type, callback) {\n    if (el.removeEventListener) {\n      el.removeEventListener(type, callback);\n    }\n    else {\n      // IE8+ Support\n      el.detachEvent('on' + type, callback);\n    }\n  },\n\n  isKeyboard(e) {\n    return [\n        'keydown',\n        'keypress',\n        'keyup',\n      ].indexOf(e.type) !== -1;\n  },\n};\n"]}