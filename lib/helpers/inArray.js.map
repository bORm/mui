{"version":3,"sources":["helpers/inArray.js"],"names":["elem","arr","i","indexOf","Array","prototype","searchElement","fromIndex","k","TypeError","O","Object","len","length","n","Math","abs","Infinity","max"],"mappings":";;;;;;kBAkEe,UAAUA,IAAV,EAAgBC,GAAhB,EAAqBC,CAArB,EAAyB;AACvC,QAAOD,OAAO,IAAP,GAAc,CAAC,CAAf,GAAmBA,IAAIE,OAAJ,CAAaH,IAAb,EAAmBE,CAAnB,CAA1B;AACA,C;;AApED;AACA;AACA;AACA,IAAI,CAACE,MAAMC,SAAN,CAAgBF,OAArB,EAA8B;AAC7BC,OAAMC,SAAN,CAAgBF,OAAhB,GAA0B,UAASG,aAAT,EAAwBC,SAAxB,EAAmC;AAC5D,MAAIC,CAAJ;;AAEA;AACA;AACA,MAAI,QAAQ,IAAZ,EAAkB;AACjB,SAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN;AACA;;AAED,MAAIC,IAAIC,OAAO,IAAP,CAAR;;AAEA;AACA;AACA;AACA,MAAIC,MAAMF,EAAEG,MAAF,KAAa,CAAvB;;AAEA;AACA,MAAID,QAAQ,CAAZ,EAAe;AACd,UAAO,CAAC,CAAR;AACA;;AAED;AACA;AACA,MAAIE,IAAI,CAACP,SAAD,IAAc,CAAtB;;AAEA,MAAIQ,KAAKC,GAAL,CAASF,CAAT,MAAgBG,QAApB,EAA8B;AAC7BH,OAAI,CAAJ;AACA;;AAED;AACA,MAAIA,KAAKF,GAAT,EAAc;AACb,UAAO,CAAC,CAAR;AACA;;AAED;AACA;AACA;AACAJ,MAAIO,KAAKG,GAAL,CAASJ,KAAK,CAAL,GAASA,CAAT,GAAaF,MAAMG,KAAKC,GAAL,CAASF,CAAT,CAA5B,EAAyC,CAAzC,CAAJ;;AAEA;AACA,SAAON,IAAII,GAAX,EAAgB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAIJ,KAAKE,CAAL,IAAUA,EAAEF,CAAF,MAASF,aAAvB,EAAsC;AACrC,WAAOE,CAAP;AACA;AACDA;AACA;AACD,SAAO,CAAC,CAAR;AACA,EA3DD;AA4DA","file":"inArray.js","sourcesContent":["// Шаги алгоритма ECMA-262, 5-е издание, 15.4.4.14\n// Ссылка (en): http://es5.github.io/#x15.4.4.14\n// Ссылка (ru): http://es5.javascript.ru/x15.4.html#x15.4.4.14\nif (!Array.prototype.indexOf) {\n\tArray.prototype.indexOf = function(searchElement, fromIndex) {\n\t\tvar k;\n\n\t\t// 1. Положим O равным результату вызова ToObject с передачей ему\n\t\t//    значения this в качестве аргумента.\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('\"this\" is null or not defined');\n\t\t}\n\n\t\tvar O = Object(this);\n\n\t\t// 2. Положим lenValue равным результату вызова внутреннего метода Get\n\t\t//    объекта O с аргументом \"length\".\n\t\t// 3. Положим len равным ToUint32(lenValue).\n\t\tvar len = O.length >>> 0;\n\n\t\t// 4. Если len равен 0, вернём -1.\n\t\tif (len === 0) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// 5. Если был передан аргумент fromIndex, положим n равным\n\t\t//    ToInteger(fromIndex); иначе положим n равным 0.\n\t\tvar n = +fromIndex || 0;\n\n\t\tif (Math.abs(n) === Infinity) {\n\t\t\tn = 0;\n\t\t}\n\n\t\t// 6. Если n >= len, вернём -1.\n\t\tif (n >= len) {\n\t\t\treturn -1;\n\t\t}\n\n\t\t// 7. Если n >= 0, положим k равным n.\n\t\t// 8. Иначе, n<0, положим k равным len - abs(n).\n\t\t//    Если k меньше нуля 0, положим k равным 0.\n\t\tk = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n\t\t// 9. Пока k < len, будем повторять\n\t\twhile (k < len) {\n\t\t\t// a. Положим Pk равным ToString(k).\n\t\t\t//   Это неявное преобразование для левостороннего операнда в операторе in\n\t\t\t// b. Положим kPresent равным результату вызова внутреннего метода\n\t\t\t//    HasProperty объекта O с аргументом Pk.\n\t\t\t//   Этот шаг может быть объединён с шагом c\n\t\t\t// c. Если kPresent равен true, выполним\n\t\t\t//    i.  Положим elementK равным результату вызова внутреннего метода Get\n\t\t\t//        объекта O с аргументом ToString(k).\n\t\t\t//   ii.  Положим same равным результату применения\n\t\t\t//        Алгоритма строгого сравнения на равенство между\n\t\t\t//        searchElement и elementK.\n\t\t\t//  iii.  Если same равен true, вернём k.\n\t\t\tif (k in O && O[k] === searchElement) {\n\t\t\t\treturn k;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t\treturn -1;\n\t};\n}\n\nexport default function( elem, arr, i ) {\n\treturn arr == null ? -1 : arr.indexOf( elem, i );\n}"]}