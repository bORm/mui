{"version":3,"sources":["components/Selection/Selection.js"],"names":["Selection","props","checked","disabled","state","type","name","label","onChange","e","target","setState","propTypes","oneOf","oneOfType","bool","string","element","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAGMA,S;;;AAsBJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,4IACVA,KADU;;AAAA,QAETC,OAFS,GAEYD,KAFZ,CAETC,OAFS;AAAA,QAEAC,QAFA,GAEYF,KAFZ,CAEAE,QAFA;;AAGhB,UAAKC,KAAL,GAAa,EAACF,gBAAD,EAAUC,kBAAV,EAAb;AAHgB;AAIjB;;;;6BAEQ;AAAA;;AAAA,mBAC+B,KAAKF,KADpC;AAAA,UACAI,IADA,UACAA,IADA;AAAA,UACMC,IADN,UACMA,IADN;AAAA,UACYC,KADZ,UACYA,KADZ;AAAA,UACmBC,SADnB,UACmBA,QADnB;AAAA,mBAEqB,KAAKJ,KAF1B;AAAA,UAEAF,OAFA,UAEAA,OAFA;AAAA,UAESC,QAFT,UAESA,QAFT;;;AAIP,aACE;AAAA;AAAA,UAAQ,WACN,yCAAO,WAAW,0BAAW,WAAX,EAAwBE,IAAxB,EAA8B,EAACH,gBAAD,EAAUC,kBAAV,EAA9B,CAAlB,GADF,EAEE,UAAU,IAFZ,EAEkB,UAAUA,QAF5B;AAGE,wEAAO,MAAME,IAAb,IACK;AACD;;;AAGAC,oBAJC,EAIKJ,gBAJL,EAIcC,kBAJd;AAKDK,oBAAU,qBAAI;AAAA,gBACJN,OADI,GACQO,EAAEC,MADV,CACJR,OADI;;AAEZ,mBAAKS,QAAL,CAAc,EAACT,gBAAD,EAAd;AACAM,yBAAYA,UAASC,CAAT,CAAZ;AACD;AATA,SADL,EAHF;AAgBE,gDAAM,WAAU,eAAhB,GAhBF;AAiBIF,iBAAS;AAAA;AAAA,YAAK,WAAU,iBAAf;AAAkCA;AAAlC;AAjBb,OADF;AAqBD;;;4BApDMK,S,GAAY;AACjBP,QAAM,iBAAUQ,KAAV,CAAgB,CACpB,UADoB,EACR,OADQ,EACC,QADD,CAAhB,CADW;AAIjBP,QAAM,iBAAUQ,SAAV,CAAoB,CACxB,iBAAUC,IADc,EACR,iBAAUC,MADF,CAApB,CAJW;AAOjBd,WAAS,iBAAUa,IAPF;AAQjBZ,YAAU,iBAAUY,IARH;AASjBR,SAAO,iBAAUO,SAAV,CAAoB,CACzB,iBAAUC,IADe,EACT,iBAAUC,MADD,EACS,iBAAUC,OADnB,CAApB;AATU,C,SAcZC,Y,GAAe;AACpBb,QAAM,UADc;AAEpBH,WAAS,KAFW;AAGpBC,YAAU,KAHU;AAIpBI,SAAO;AAJa,C;kBAyCTP,S","file":"Selection.js","sourcesContent":["import React, {Component, PropTypes} from 'react'\nimport classNames from 'helpers/classNames'\nimport Ripple from 'components/Ripple'\n\nclass Selection extends Component {\n  static propTypes = {\n    type: PropTypes.oneOf([\n      'checkbox', 'radio', 'switch'\n    ]),\n    name: PropTypes.oneOfType([\n      PropTypes.bool, PropTypes.string\n    ]),\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.oneOfType([\n      PropTypes.bool, PropTypes.string, PropTypes.element\n    ])\n  };\n\n  static defaultProps = {\n    type: 'checkbox',\n    checked: false,\n    disabled: false,\n    label: false\n  };\n\n  constructor(props){\n    super(props);\n    const {checked, disabled} = props;\n    this.state = {checked, disabled};\n  }\n\n  render() {\n    const {type, name, label, onChange} = this.props;\n    const {checked, disabled} = this.state;\n\n    return (\n      <Ripple container={\n        <label className={classNames('selection', type, {checked, disabled})} />\n      } isCenter={true} disabled={disabled}>\n        <input type={type} {\n          ...{\n            /**\n             * Input Props\n             */\n            name, checked, disabled,\n            onChange: e=> {\n              const { checked } = e.target;\n              this.setState({checked});\n              onChange && onChange(e);\n            }\n          }\n        } />\n        <span className=\"checkbox-icon\" />\n        { label && <div className=\"selection-label\">{label}</div> }\n      </Ripple>\n    );\n  }\n}\n\nexport default Selection;"]}