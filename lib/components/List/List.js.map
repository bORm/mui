{"version":3,"sources":["components/List/List.js"],"names":["List","props","component","className","other","children","propTypes","oneOfType","string","element","defaultProps","Item","e","onClick","primary","text","secondary","handleLiClick","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEMA,I;;;AAaJ,gBAAYC,KAAZ,EAAmB;AAAA;AAAA,6HACXA,KADW;AAElB;;;;6BAEQ;AAAA,mBACoC,KAAKA,KADzC;AAAA,UACCC,SADD,UACCA,SADD;AAAA,UACYC,SADZ,UACYA,SADZ;AAAA,UAC0BC,KAD1B;;AAEP,UAAMH,QAAQ;AACZE,mBAAW,0BAAW,MAAX,EAAmBA,SAAnB;AADC,OAAd;AAGA,aAAO,2BAAeD,SAAf,IACL,yBAAaA,SAAb,EAAwBD,KAAxB,EAA+B,KAAKA,KAAL,CAAWI,QAA1C,CADK,GAEL,0BAAcH,SAAd,EAAyBD,KAAzB,EAAgC,KAAKA,KAAL,CAAWI,QAA3C,CAFF;AAGD;;;4BAxBMC,S,GAAY;AACjBJ,aAAW,iBAAUK,SAAV,CAAoB,CAC7B,iBAAUC,MADmB,EACX,iBAAUC,OADC,CAApB,CADM;AAIjBN,aAAW,iBAAUK;AAJJ,C,SAOZE,Y,GAAe;AACpBR,aAAW,KADS;AAEpBC,aAAW;AAFS,C;IAoBlBQ,I;;;AAWJ,gBAAYV,KAAZ,EAAmB;AAAA;AAAA,6HACXA,KADW;AAElB;;;;kCAEaW,C,EAAG;AAAA,UACPC,OADO,GACK,KAAKZ,KADV,CACPY,OADO;AAEf;;AACAA,iBAAWA,QAAQD,CAAR,CAAX;AACD;;;6BAEQ;AAAA,oBAMH,KAAKX,KANF;AAAA,UAELE,SAFK,WAELA,SAFK;AAAA,UAGLD,SAHK,WAGLA,SAHK;AAAA,UAGMG,QAHN,WAGMA,QAHN;AAAA,UAILS,OAJK,WAILA,OAJK;AAAA,UAIIC,IAJJ,WAIIA,IAJJ;AAAA,UAIUC,SAJV,WAIUA,SAJV;AAAA,UAKFZ,KALE;;;AAQP,UAAMH,QAAQ;AACZE,mBAAW,0BAAW,WAAX,EAAwBA,SAAxB,CADC;AAEZU,iBAAW,KAAKI,aAAhB,MAAW,IAAX;AAFY,OAAd;;AAKA,UAAMC,OAAO,2BAAehB,SAAf,IACX,yBAAaA,SAAb,EAAwBD,KAAxB,CADW,GAEX,0BAAcC,SAAd,EAAyBD,KAAzB,CAFF;;AAIA,aACE;AAAA;AAAA,iCAAQ,WAAWiB,IAAnB,IAA6Bd,KAA7B;AACIC,oBAAYA,QADhB;AAEIS,mBAAW;AAAA;AAAA,YAAK,WAAU,SAAf;AAA0BA;AAA1B,SAFf;AAGIC,gBAAQ;AAAA;AAAA,YAAK,WAAU,MAAf;AAAuBA;AAAvB,SAHZ;AAIIC,qBAAa;AAAA;AAAA,YAAK,WAAU,WAAf;AAA4BA;AAA5B;AAJjB,OADF;AAQD;;;6BA7CMV,S,GAAY;AACjBJ,aAAW,iBAAUK,SAAV,CAAoB,CAC7B,iBAAUC,MADmB,EACX,iBAAUC,OADC,CAApB;AADM,C,UAMZC,Y,GAAe;AACpBR,aAAW;AADS,C;kBA0CTF,I;QACPW,I,GAAAA,I","file":"List.js","sourcesContent":["import React, {Component, PropTypes, isValidElement, cloneElement, createElement} from 'react'\nimport Ripple from '../Ripple'\nimport classNames from '../../helpers/classNames'\n\nclass List extends Component {\n  static propTypes = {\n    component: PropTypes.oneOfType([\n      PropTypes.string, PropTypes.element\n    ]),\n    className: PropTypes.string\n  };\n\n  static defaultProps = {\n    component: 'div',\n    className: ''\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { component, className, ...other } = this.props;\n    const props = {\n      className: classNames('list', className)\n    };\n    return isValidElement(component) ?\n      cloneElement(component, props, this.props.children) :\n      createElement(component, props, this.props.children);\n  }\n}\n\nclass Item extends Component {\n  static propTypes = {\n    component: PropTypes.oneOfType([\n      PropTypes.string, PropTypes.element\n    ])\n  };\n\n  static defaultProps = {\n    component: 'div'\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleLiClick(e) {\n    const { onClick } = this.props;\n    //console.log(e);\n    onClick && onClick(e);\n  }\n\n  render() {\n    const {\n      className,\n      component, children,\n      primary, text, secondary,\n      ...other\n    } = this.props;\n\n    const props = {\n      className: classNames('list-item', className),\n      onClick: ::this.handleLiClick\n    };\n\n    const item = isValidElement(component) ?\n      cloneElement(component, props) :\n      createElement(component, props);\n\n    return (\n      <Ripple container={item} {...other}>\n        { children && children }\n        { primary && <div className=\"primary\">{primary}</div> }\n        { text && <div className=\"text\">{text}</div> }\n        { secondary && <div className=\"secondary\">{secondary}</div> }\n      </Ripple>\n    );\n  }\n}\n\nexport default List\nexport {Item}"]}