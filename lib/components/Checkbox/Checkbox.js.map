{"version":3,"sources":["components/Checkbox/Checkbox.js"],"names":["Checkbox","props","checked","disabled","state","name","label","onChange","e","target","setState","propTypes","oneOfType","bool","string","element","defaultProps","CheckboxLabel","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAGMA,Q;;;AAkBJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA,wIACXA,KADW;;AAAA,MAEVC,OAFU,GAEWD,KAFX,CAEVC,OAFU;AAAA,MAEDC,QAFC,GAEWF,KAFX,CAEDE,QAFC;;AAGjB,QAAKC,KAAL,GAAa,EAACF,gBAAD,EAAUC,kBAAV,EAAb;AAHiB;AAIjB;;;;2BAEQ;AAAA;;AAAA,gBACyB,KAAKF,KAD9B;AAAA,OACAI,IADA,UACAA,IADA;AAAA,OACMC,KADN,UACMA,KADN;AAAA,OACaC,SADb,UACaA,QADb;AAAA,gBAEqB,KAAKH,KAF1B;AAAA,OAEAF,OAFA,UAEAA,OAFA;AAAA,OAESC,QAFT,UAESA,QAFT;;;AAIP,UACC;AAAA;AAAA,MAAQ,WACP,yCAAO,WAAW,0BAAW,UAAX,EAAsB,EAACD,gBAAD,EAAUC,kBAAV,EAAtB,CAAlB,GADD,EAEE,UAAU,IAFZ,EAEkB,UAAUA,QAF5B;AAGC,oEAAO,MAAK,UAAZ,IACI;AACF;;;AAGAE,eAJE,EAIIH,gBAJJ,EAIaC,kBAJb;AAKFI,eAAU,qBAAI;AAAA,UACLL,OADK,GACOM,EAAEC,MADT,CACLP,OADK;;AAEb,aAAKQ,QAAL,CAAc,EAACR,gBAAD,EAAd;AACFK,mBAAYA,UAASC,CAAT,CAAZ;AACE;AATC,KADJ,EAHD;AAgBC,4CAAM,WAAU,eAAhB,GAhBD;AAiBGF,aAAS;AAAC,kBAAD;AAAA;AAAgBA;AAAhB;AAjBZ,IADD;AAqBD;;;4BAhDMK,S,GAAY;AACjBN,OAAM,iBAAUO,SAAV,CAAoB,CACzB,iBAAUC,IADe,EACT,iBAAUC,MADD,CAApB,CADW;AAIjBZ,UAAS,iBAAUW,IAJF;AAKjBV,WAAU,iBAAUU,IALH;AAMlBP,QAAO,iBAAUM,SAAV,CAAoB,CAC1B,iBAAUC,IADgB,EACV,iBAAUC,MADA,EACQ,iBAAUC,OADlB,CAApB;AANW,C,SAWZC,Y,GAAe;AACrBd,UAAS,KADY;AAEpBC,WAAU,KAFU;AAGrBG,QAAO;AAHc,C;;IAwClBW,a;;;;;;;;;;2BACG;AACP,UACC;AAAA;AAAA,MAAK,WAAU,gBAAf;AAAkC,SAAKhB,KAAL,CAAWiB;AAA7C,IADD;AAGA;;;;;kBAGalB,Q;QACNiB,a,GAAAA,a","file":"Checkbox.js","sourcesContent":["import React, {Component, PropTypes} from 'react'\nimport classNames from 'helpers/classNames'\nimport Ripple from 'components/Ripple'\n\nclass Checkbox extends Component {\n  static propTypes = {\n    name: PropTypes.oneOfType([\n\t    PropTypes.bool, PropTypes.string\n    ]),\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n\t  label: PropTypes.oneOfType([\n\t\t  PropTypes.bool, PropTypes.string, PropTypes.element\n\t  ])\n  };\n\n  static defaultProps = {\n\t  checked: false,\n    disabled: false,\n\t  label: false\n  };\n\n  constructor(props){\n  \tsuper(props);\n\t  const {checked, disabled} = props;\n\t  this.state = {checked, disabled};\n  }\n\n  render() {\n    const {name, label, onChange} = this.props;\n    const {checked, disabled} = this.state;\n\n    return (\n\t    <Ripple container={\n\t\t    <label className={classNames('checkbox',{checked, disabled})} />\n\t    } isCenter={true} disabled={disabled}>\n\t\t    <input type=\"checkbox\" {\n\t\t\t    ...{\n\t\t\t\t    /**\n\t\t\t\t     * Input Props\n\t\t\t\t     */\n\t\t\t    \tname, checked, disabled,\n\t\t\t\t    onChange: e=> {\n\t\t\t    \t\tconst { checked } = e.target;\n\t\t\t\t\t    this.setState({checked})\n\t\t\t\t\t\t\tonChange && onChange(e);\n\t\t\t\t    }\n\t\t\t    }\n\t\t    } />\n\t\t    <span className=\"checkbox-icon\" />\n\t\t    { label && <CheckboxLabel>{label}</CheckboxLabel> }\n\t    </Ripple>\n    );\n  }\n}\n\nclass CheckboxLabel extends Component {\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"checkbox-label\">{ this.props.children }</div>\n\t\t);\n\t}\n}\n\nexport default Checkbox\nexport { CheckboxLabel }"]}