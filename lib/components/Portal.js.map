{"version":3,"sources":["components/Portal.js"],"names":["emitter","renderSubtreeIntoContainer","require","unstable_renderSubtreeIntoContainer","Portal","boolean","props","portal","componentWillUnmount","unMount","id","isOpen","toggle","isBool","once","before","mount","after","document","getElementById","className","createElement","mountTo","appendChild","child","timer","setTimeout","open","clearTimeout","children","removeChild","propTypes","string","isRequired","bool","shape","func","defaultProps","emit"],"mappings":"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","file":"Portal.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport {EventEmitter} from 'fbemitter';\nconst emitter = new EventEmitter();\nconst renderSubtreeIntoContainer = require(\"react-dom\").unstable_renderSubtreeIntoContainer;\nimport { classNames } from 'helpers'\n\nclass Portal extends Component {\n\tstatic propTypes = {\n\t\tid: PropTypes.string.isRequired,\n\t\tmountTo: PropTypes.string,\n\t\tisOpen: PropTypes.bool,\n\t\ttoggle: PropTypes.shape({\n\t\t\tbefore: PropTypes.func,\n\t\t\tafter: PropTypes.func\n\t\t}),\n\t\tcomponentWillUnmount: PropTypes.func\n\t};\n\n\tstatic defaultProps = {\n\t\tmountTo: 'portals',\n\t\tisOpen: false,\n\t\ttoggle: {\n\t\t\tbefore: ()=>{},\n\t\t\tafter: ()=>{}\n\t\t}\n\t};\n\n\tstatic isOpen = false;\n\n\tstatic isBool(boolean) {\n\t\treturn typeof boolean === 'boolean' ? boolean : false;\n\t}\n\n\tstatic toggle = (id, isOpen)=> {\n\t\temitter.emit('toggle', id, Portal.isBool(isOpen));\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.portal = null;\n\t\t//this.shouldComponentUpdate = ::PureRenderMixin.shouldComponentUpdate;\n\t\tthis.componentWillUnmount = props.componentWillUnmount || ::this.unMount;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id, isOpen } = this.props;\n\t\tthis.toggle(id, Portal.isBool(isOpen));\n\t}\n\n\ttoggle(id, isOpen) {\n\t\tconst { toggle } = this.props;\n\t\temitter.once('toggle', ::this.toggle);\n\t\tif ( id !== this.props.id ) return;\n\t\ttoggle.before(id, isOpen);\n\t\tPortal.isOpen = isOpen;\n\t\tthis.mount(id, isOpen);\n\t\ttoggle.after(id, isOpen);\n\t}\n\n\tmount(id, isOpen = false) {\n\n\t\tthis.portal = document.getElementById(id);\n\t\tconst { className } = this.props;\n\n\t\tif ( !this.portal ) {\n\t\t\tthis.portal = document.createElement('div');\n\t\t\tthis.portal.id = id;\n\t\t\tdocument.getElementById(this.props.mountTo).appendChild(this.portal);\n\t\t}\n\t\tif ( isOpen && !!(this.portal) ) {\n\t\t\tthis.child();\n\t\t\t// Fix portal is null\n\t\t\tconst portal = this.portal;\n\t\t\tthis.timer = setTimeout(()=>{\n\t\t\t\tportal.className = classNames(className, {\n\t\t\t\t\topen: isOpen\n\t\t\t\t});\n\t\t\t\tthis.timer && clearTimeout(this.timer);\n\t\t\t}, 100);\n\t\t}\n\n\t\t( !isOpen && this.portal ) && this.unMount();\n\t}\n\n\tchild() {\n\t\tconst { children } = this.props;\n\t\trenderSubtreeIntoContainer(this, children, this.portal);\n\t}\n\n\tcomponentDidUpdate(props) {\n\t\tif (this.portal && Portal.isOpen && props.id === this.props.id) {\n\t\t\treturn this.child();\n\t\t}\n\t}\n\tunMount()  {\n\t\tPortal.isOpen = false;\n\t\tif ( this.portal ) {\n\t\t\tunmountComponentAtNode(this.portal);\n\t\t\tdocument.getElementById(this.props.mountTo).removeChild(this.portal);\n\t\t\tthis.portal = null;\n\t\t}\n\t}\n\n\trender() {return null}\n\n}\n\nexport default Portal;\n/*\n\nimport React from 'react';\nimport ReactDOM, { findDOMNode } from 'react-dom';\nimport {EventEmitter} from 'fbemitter';\nimport { classNames } from 'helpers'\nconst emitter = new EventEmitter();\nconst KEYCODES = {\n\tESCAPE: 27,\n};\n\nexport default class Portal extends React.Component {\n\n\tstatic propTypes = {\n\t\tchildren: React.PropTypes.element.isRequired,\n\t\topenByClickOn: React.PropTypes.element,\n\t\tcloseOnEsc: React.PropTypes.bool,\n\t\tcloseOnOutsideClick: React.PropTypes.bool,\n\t\tisOpened: React.PropTypes.bool,\n\t\tonOpen: React.PropTypes.func,\n\t\tonClose: React.PropTypes.func,\n\t\tbeforeClose: React.PropTypes.func,\n\t\tonUpdate: React.PropTypes.func,\n\t\ttoggle: React.PropTypes.shape({\n\t\t\tbefore: React.PropTypes.func,\n\t\t\tafter: React.PropTypes.func\n\t\t}),\n\t};\n\n\tstatic defaultProps = {\n\t\tonOpen: () => {},\n\t\tonClose: () => {},\n\t\tonUpdate: () => {},\n\t\ttoggle: {\n\t\t\tbefore: ()=>{},\n\t\t\tafter: ()=>{}\n\t\t}\n\t};\n\n\tstatic isBool(boolean) {\n\t\treturn typeof boolean === 'boolean' ? boolean : false;\n\t}\n\n\tstatic toggle = (id, isOpen)=> {\n\t\temitter.emit('toggle', id, Portal.isBool(isOpen));\n\t};\n\n\ttoggle(id, isOpen) {\n\t\tconst { toggle } = this.props;\n\t\temitter.once('toggle', ::this.toggle);\n\t\tif ( id !== this.props.id ) return;\n\t\ttoggle.before(id, isOpen);\n\t\tPortal.isOpen = isOpen;\n\t\t//this.mount(id, isOpen);\n\t\tif ( isOpen ) {\n\t\t\tif (this.state.isOpen) {\n\t\t\t\tthis.renderPortal(this.props);\n\t\t\t} else {\n\t\t\t\tthis.openPortal(this.props);\n\t\t\t}\n\t\t}\telse {\n\t\t\tthis.closePortal();\n\t\t}\n\t\ttoggle.after(id, isOpen);\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { isOpen: false };\n\t\tthis.handleWrapperClick = this.handleWrapperClick.bind(this);\n\t\tthis.closePortal = this.closePortal.bind(this);\n\t\tthis.handleOutsideMouseClick = this.handleOutsideMouseClick.bind(this);\n\t\tthis.handleKeydown = this.handleKeydown.bind(this);\n\t\tthis.portal = null;\n\t\tthis.node = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.closeOnEsc) {\n\t\t\tdocument.addEventListener('keydown', this.handleKeydown);\n\t\t}\n\n\t\tif (this.props.closeOnOutsideClick) {\n\t\t\tdocument.addEventListener('mouseup', this.handleOutsideMouseClick);\n\t\t\tdocument.addEventListener('touchstart', this.handleOutsideMouseClick);\n\t\t}\n\n\t\tconst { id, isOpen } = this.props;\n\t\tthis.toggle(id, Portal.isBool(isOpen));\n\t\t/!*if (this.props.isOpened) {\n\t\t\tthis.openPortal();\n\t\t}*!/\n\t}\n\n\tcomponentWillReceiveProps(newProps) {\n\t\t// portal's 'is open' state is handled through the prop isOpened\n\t\tif (typeof newProps.isOpened !== 'undefined') {\n\t\t\tif (newProps.isOpened) {\n\t\t\t\tif (this.state.isOpen) {\n\t\t\t\t\tthis.renderPortal(newProps);\n\t\t\t\t} else {\n\t\t\t\t\tthis.openPortal(newProps);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!newProps.isOpened && this.state.isOpen) {\n\t\t\t\tthis.closePortal();\n\t\t\t}\n\t\t}\n\n\t\t// portal handles its own 'is open' state\n\t\tif (typeof newProps.isOpened === 'undefined' && this.state.isOpen) {\n\t\t\tthis.renderPortal(newProps);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.props.closeOnEsc) {\n\t\t\tdocument.removeEventListener('keydown', this.handleKeydown);\n\t\t}\n\n\t\tif (this.props.closeOnOutsideClick) {\n\t\t\tdocument.removeEventListener('mouseup', this.handleOutsideMouseClick);\n\t\t\tdocument.removeEventListener('touchstart', this.handleOutsideMouseClick);\n\t\t}\n\n\t\tthis.closePortal(true);\n\t}\n\n\thandleWrapperClick(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.state.isOpen) { return; }\n\t\tthis.openPortal();\n\t}\n\n\topenPortal(props = this.props) {\n\t\tthis.setState({ isOpen: true });\n\t\tthis.renderPortal(props);\n\t\tthis.props.onOpen(this.node);\n\t}\n\n\tclosePortal(isUnmounted = false) {\n\t\tconst resetPortalState = () => {\n\t\t\tif (this.node) {\n\t\t\t\tReactDOM.unmountComponentAtNode(this.node);\n\t\t\t\tdocument.body.removeChild(this.node);\n\t\t\t}\n\t\t\tthis.portal = null;\n\t\t\tthis.node = null;\n\t\t\tif (isUnmounted !== true) {\n\t\t\t\tthis.setState({ isOpen: false });\n\t\t\t}\n\t\t};\n\n\t\tif (this.state.isOpen) {\n\t\t\tif (this.props.beforeClose) {\n\t\t\t\tthis.props.beforeClose(this.node, resetPortalState);\n\t\t\t} else {\n\t\t\t\tresetPortalState();\n\t\t\t}\n\n\t\t\tthis.props.onClose();\n\t\t}\n\t}\n\n\thandleOutsideMouseClick(e) {\n\t\tif (!this.state.isOpen) { return; }\n\n\t\tconst root = findDOMNode(this.portal);\n\t\tif (root.contains(e.target) || (e.button && e.button !== 0)) { return; }\n\n\t\te.stopPropagation();\n\t\tthis.closePortal();\n\t}\n\n\thandleKeydown(e) {\n\t\tif (e.keyCode === KEYCODES.ESCAPE && this.state.isOpen) {\n\t\t\tthis.closePortal();\n\t\t}\n\t}\n\n\trenderPortal(props) {\n\t\tif (!this.node) {\n\t\t\tthis.node = document.createElement('div');\n\t\t\tdocument.body.appendChild(this.node);\n\t\t}\n\n\t\tlet children = props.children;\n\t\t// https://gist.github.com/jimfb/d99e0678e9da715ccf6454961ef04d1b\n\t\tif (typeof props.children.type === 'function') {\n\t\t\tchildren = React.cloneElement(props.children, { closePortal: this.closePortal });\n\t\t}\n\n\t\tthis.portal = ReactDOM.unstable_renderSubtreeIntoContainer(\n\t\t\tthis,\n\t\t\tchildren,\n\t\t\tthis.node,\n\t\t\tthis.props.onUpdate\n\t\t);\n\n\t\tthis.timer = setTimeout(()=>{\n\t\t\tthis.node.className = classNames(props.className, {\n\t\t\t\topen: true\n\t\t\t});\n\t\t\tthis.timer && clearTimeout(this.timer);\n\t\t}, 100);\n\t}\n\n\trender() {\n\t\tif (this.props.openByClickOn) {\n\t\t\treturn React.cloneElement(this.props.openByClickOn, { onClick: this.handleWrapperClick });\n\t\t}\n\t\treturn null;\n\t}\n}*/\n"]}