{"version":3,"sources":["components/SelectionGroup/SelectionGroup.js"],"names":["SelectionGroup","props","text","value","className","children","onClick","ripple","other","legend","name","map","child","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEMA,c;;;;;;;;;;6BAKK;AAAA;;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAGLC,IAHK,UAGLA,IAHK;AAAA,UAGCC,KAHD,UAGCA,KAHD;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAKKC,OALL,UAKKA,OALL;AAAA,UAMLC,MANK,UAMLA,MANK;AAAA,UAMMC,KANN;;;AASP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAS,eAAKP,KAAL,CAAWQ;AAApB,SADF;AAEI,aAAKR,KAAL,CAAWS,IAAX,GAAkB,gBAASC,GAAT,CAAaN,QAAb,EAAuB,iBAAO;AAC9C,iBAAO,yBAAaO,KAAb,EAAoB;AACzBF,kBAAM,OAAKT,KAAL,CAAWS;AADQ,WAApB,CAAP;AAGD,SAJiB,CAAlB,GAIKL;AANT,OADF;AAUD;;;4BAvBMQ,S,GAAY,E,SAEZC,Y,GAAe,E;kBAwBTd,c","file":"SelectionGroup.js","sourcesContent":["import React, {Component, PropTypes, Children, cloneElement} from 'react'\n\nclass SelectionGroup extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  render() {\n\n    const {\n      text, value,\n      className,\n      children, onClick,\n      ripple, ...other\n    } = this.props;\n\n    return (\n      <fieldset>\n        <legend>{this.props.legend}</legend>\n        { this.props.name ? Children.map(children, child=>{\n            return cloneElement(child, {\n              name: this.props.name\n            })\n          }) : children }\n      </fieldset>\n    );\n  }\n}\n\nexport default SelectionGroup"]}